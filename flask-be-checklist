1) get simple API up and running (branch = set-up)
- pip install -r requirements.txt to install project requirements




TO DO:
- understand what each app.config variable does
- take all the config vars and put them in a .ENV file. Figure out how to do that in Python
- add DATE to the scores
- learn how to limit difficulty to just 1,2,3


MUST FIX:
- Validate guesses during game play -[done]
- Add a dictionary of guesses with guess, number correct, number & location correct - [DONE]
- fix the difficulty level to be the number of digits [DONE]
- integrate date-time
- fix the results to currently exclude difficulty level
- integrate with Postgres (learn how to do a .ENV etc)
- write the full read.me
- fix username inputs into the DB. Make sure there are no leading/trailing white spaces, not case sensitive etc.
- make resulting outputs prettier

- clean up the file, break things up into smaller functions etc. 

- Add unit tests


BE READY TO BUILD THE FOLLOWING IN INTERVIEW:
- add authorization to the user login
- max score by username
- 
- add username to the end of the game if they want to save score
- difficulty level
    - know how to add difficulty to the game logic
    - make an outline of all the things you would change. Check-out a branch and add this next
    - know how to add another table and look up/join with the current table
- explain your project very clearly


CONTINUE BUILDING ON THE PROJECT ON A SEPERATE BRANCH - STAGING. 


cleanup ideas: 
- input text file
- base URL

Other questions you should know answers to for interview:
- Systems Design etc.
- JSON - why do we use it?
- HTTP protocol
- WHY did I use Rest API? What is it good for?
- MVC and what parts are what in my APP